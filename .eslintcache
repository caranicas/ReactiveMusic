[{"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\index.js":"1","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\App.js":"2","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\serviceWorker.js":"3","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\app\\store.js":"4","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\counter\\Counter.js":"5","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\counter\\counterSlice.js":"6","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\routes\\editor\\EditorPage.js":"7","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\routes\\view\\ViewPage.js":"8","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\audioDemo.js":"9","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\primatives\\Box.js":"10","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\controls\\editControls.js":"11","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\audioDemoSlice.js":"12","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\controls\\infoControls.js":"13","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\CustomCamera.js":"14","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\primatives\\Sphere.js":"15","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\routes\\auth\\CallbackPage.js":"16"},{"size":644,"mtime":1609277362266,"results":"17","hashOfConfig":"18"},{"size":2713,"mtime":1609432557684,"results":"19","hashOfConfig":"18"},{"size":5141,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":310,"mtime":1609030996706,"results":"21","hashOfConfig":"18"},{"size":1626,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":1551,"mtime":499162500000,"results":"24","hashOfConfig":"18"},{"size":248,"mtime":1609278112934,"results":"25","hashOfConfig":"18"},{"size":281,"mtime":1609431562900,"results":"26","hashOfConfig":"18"},{"size":5653,"mtime":1609431562898,"results":"27","hashOfConfig":"18"},{"size":1138,"mtime":1609179931602,"results":"28","hashOfConfig":"18"},{"size":1885,"mtime":1609282595043,"results":"29","hashOfConfig":"18"},{"size":3190,"mtime":1609431562899,"results":"30","hashOfConfig":"18"},{"size":730,"mtime":1609208165748,"results":"31","hashOfConfig":"18"},{"size":799,"mtime":1609128767774,"results":"32","hashOfConfig":"18"},{"size":944,"mtime":1609296173637,"results":"33","hashOfConfig":"18"},{"size":918,"mtime":1609431562900,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"s9ynba",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"4qd0vz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\index.js",[],["75","76"],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\App.js",["77","78"],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\serviceWorker.js",[],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\app\\store.js",[],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\counter\\Counter.js",[],["79","80"],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\routes\\editor\\EditorPage.js",[],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\routes\\view\\ViewPage.js",[],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\audioDemo.js",["81","82","83","84","85","86","87","88","89","90","91","92","93"],"import {  useCallback, useRef } from 'react';\r\n\r\nimport {  useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nimport { Canvas, useThree} from 'react-three-fiber';\r\n\r\n\r\nimport {Raycaster, Vector3, Vector2 } from 'three';\r\n\r\nimport { Box, dreiBox } from '../../primatives/Box';\r\n\r\nimport { Sphere } from '../../primatives/Sphere';\r\n\r\nimport CustomCamera from './CustomCamera';\r\nimport EditControls from './controls/editControls';\r\nimport InfoControls from './controls/infoControls';\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\n\r\n\r\nimport styles from './audioDemo.module.css';\r\n\r\nimport { \r\n    INSPECT, MAKE_SQUARE, MAKE_CIRCLE,\r\n    addBoxToScene, addSphereToScene,\r\n    selectCubes, selectSpheres, selectCurrentAction, \r\n    selectDemoSpotifyToken\r\n} from './audioDemoSlice';\r\n\r\nfunction BoxList (props) {\r\n    const { boxes } = props;\r\n\r\n    return boxes.map((box) => {\r\n        //console.log('box', box);\r\n        return (\r\n            <Box key={box.id} position={box.position} />\r\n        );\r\n        /**            <dreiBox></dreiBox> */\r\n    })\r\n};\r\n\r\n\r\nfunction SphereList (props) {\r\n    const { spheres } = props;\r\n    return spheres.map((sphere) => {\r\n        //console.log('sphere', sphere);\r\n        return (\r\n            <Sphere key={sphere.id} position={sphere.position} />\r\n        );\r\n        /**            <dreiBox></dreiBox> */\r\n    })\r\n};\r\n\r\n\r\n// function screenToWorld(_screenPos)\r\n// {\r\n//     var worldPos = _screenPos.clone();\r\n//     worldPos.x = worldPos.x / windowHalfX - 1;\r\n//     worldPos.y = - worldPos.y / windowHalfY + 1;\r\n//     projector.unprojectVector( worldPos, camera );\r\n//     return worldPos;                    \r\n// }\r\n\r\nexport default function AudioDemo () {\r\n\r\n    const camDepth = 10;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const boxes = useSelector(selectCubes);\r\n    const spheres = useSelector(selectSpheres);\r\n    const action = useSelector(selectCurrentAction);\r\n    const spotifyToken = useSelector(selectDemoSpotifyToken);\r\n\r\n\r\n    const cameraRef = useRef();\r\n    const raycaster = new Raycaster();\r\n    const clickCanvas = useCallback(\r\n        (e) => {\r\n            const { \r\n            nativeEvent: {\r\n                offsetX, \r\n                offsetY,\r\n                // might need to use layer if offset doesnt exist \r\n                layerX,\r\n                layerY,\r\n            },\r\n            target: {\r\n                clientWidth,\r\n                clientHeight,\r\n            }} = e;\r\n            //const { scene } = useThree();\r\n\r\n            const ShapeInspect = () => {\r\n                console.log('she can inspect me...')\r\n                const mouse = new Vector3();\r\n                mouse.x = ( offsetX/ clientWidth ) * 2 - 1;\r\n                mouse.y = - ( offsetY / clientHeight ) * 2 + 1;\r\n                mouse.z = -1;\r\n                raycaster.setFromCamera( mouse, cameraRef.current );\r\n    \r\n                //const intersects = raycaster.intersectObjects( scene.children );\r\n            }\r\n\r\n            const addBox = () => { \r\n                // good enough for now.\r\n                // this needs to work regardless of FOV and camera depth\r\n                const mouse = new Vector3();\r\n                mouse.x = ( offsetX/ clientWidth ) * 2 - 1;\r\n                mouse.y = - ( offsetY / clientHeight ) * 2 + 1;\r\n                mouse.z = -1;\r\n                raycaster.setFromCamera( mouse, cameraRef.current );\r\n                let {ray: {direction, direction: {x,y,z}}} = raycaster;\r\n                // not sure why i need to multiply it by this... \r\n                x *= camDepth;\r\n                y *= camDepth;\r\n                const pos = {x, y, z:0};\r\n                return dispatch(addBoxToScene({pos}))\r\n            };\r\n\r\n            const addSphere = () => { \r\n                // dry this up with above\r\n                // good enough for now.\r\n                // this needs to work regardless of FOV and camera depth\r\n                const mouse = new Vector3();\r\n                mouse.x = ( offsetX/ clientWidth ) * 2 - 1;\r\n                mouse.y = - ( offsetY / clientHeight ) * 2 + 1;\r\n                mouse.z = -1;\r\n                raycaster.setFromCamera( mouse, cameraRef.current );\r\n                let {ray: {direction, direction: {x,y,z}}} = raycaster;\r\n                // not sure why i need to multiply it by this... \r\n                x *= camDepth;\r\n                y *= camDepth;\r\n                const pos = {x, y, z:0};\r\n                return dispatch(addSphereToScene({pos}))\r\n            }\r\n\r\n            if(action == INSPECT) {\r\n                return ShapeInspect();\r\n            }\r\n            else if(action == MAKE_SQUARE) {\r\n                return addBox();\r\n            }\r\n            else if(action == MAKE_CIRCLE) {\r\n                return addSphere();\r\n            }\r\n\r\n        },\r\n        [dispatch, action]\r\n    );\r\n    return (\r\n        <>\r\n            <div className={styles.canvasContainer}>\r\n                <Canvas style={{ position: 'absolute', top:'0' }} onClick={clickCanvas}>\r\n                    <CustomCamera ref={cameraRef} fov={30} position={[0, 0, camDepth]} />\r\n                    <ambientLight />\r\n                    <pointLight position={[10, 10, 10]} />\r\n                    <BoxList boxes={boxes} ></BoxList>\r\n                    <SphereList spheres={spheres} ></SphereList>\r\n                </Canvas>\r\n            </div>\r\n            <EditControls></EditControls>\r\n            <InfoControls></InfoControls>\r\n\r\n            <SpotifyPlayer\r\n                token={spotifyToken}\r\n                uris={['spotify:artist:6HQYnRM4OzToCYPpVBInuU']}\r\n            />\r\n        </>\r\n    );\r\n};","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\primatives\\Box.js",["94"],"import { useRef, useState } from 'react';\r\nimport { useFrame, extend } from 'react-three-fiber'\r\n\r\nimport { RoundedBox } from '@react-three/drei'\r\nexport function dreiBox() {\r\n  return (\r\n      <RoundedBox>\r\n          <meshPhongMaterial attach=\"material\" color=\"#f3f3f3\" />\r\n      </RoundedBox>\r\n  );\r\n};\r\n\r\nexport function Box(props) {\r\n    // This reference will give us direct access to the mesh\r\n  const mesh = useRef();\r\n\r\n  // Set up state for the hovered and active state\r\n  const [hovered, setHover] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n\r\n  // Rotate mesh every frame, this is outside of React without overhead\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01\r\n  });\r\n\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      ref={mesh}\r\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\r\n      onClick={(event) => setActive(!active)}\r\n      onPointerOver={(event) => setHover(true)}\r\n      onPointerOut={(event) => setHover(false)}>\r\n      <boxBufferGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\r\n    </mesh>\r\n  );\r\n};","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\controls\\editControls.js",["95","96"],"import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport {ToggleButtonGroup, ToggleButton} from '@material-ui/lab'\r\nimport { \r\n    INSPECT, MAKE_SQUARE, MAKE_CIRCLE,\r\n    addBoxToScene, addSphereToScene, setEditAction, setShapeIndexActive,\r\n   selectActiveShapeId,  selectCurrentAction\r\n} from '../audioDemoSlice';\r\n\r\nexport default function EditControls () {\r\n\r\n    const dispatch = useDispatch();\r\n    const buttonValue = useSelector(selectCurrentAction);\r\n    const idValu = useSelector(selectActiveShapeId);\r\n\r\n\r\n    const updateSelectedIndex = useCallback(\r\n        () => {\r\n            return dispatch(setShapeIndexActive(0));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const createBox = useCallback(\r\n        () => {\r\n            const pos = {x:0,y:0,z:0};\r\n            return dispatch(addBoxToScene({pos}));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const createSphere = useCallback(\r\n        () => {\r\n            const pos = {x:0,y:0,z:0};\r\n            return dispatch(addSphereToScene({pos}));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const handleEditAction = (event, newAction) => {\r\n        dispatch(setEditAction(newAction))\r\n    };\r\n\r\n    return (\r\n        <div style={{ display:'flex', padding: '5px', backgroundColor:'rgb(200,200,200)' }}>\r\n            <ToggleButtonGroup value={buttonValue} onChange={handleEditAction}  exclusive aria-label=\"text formatting\">\r\n                <ToggleButton value={INSPECT}  onDoubleClick={updateSelectedIndex}> Inspect </ToggleButton> \r\n                <ToggleButton value={MAKE_SQUARE} onDoubleClick={createBox}>Add Cube</ToggleButton> \r\n                <ToggleButton value={MAKE_CIRCLE} onDoubleClick={createSphere} color=\"primary\">Add sphere</ToggleButton> \r\n            </ToggleButtonGroup>\r\n        </div>\r\n    );\r\n}\r\n  ","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\audioDemoSlice.js",["97","98"],"import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { createSelector } from 'reselect'\r\n\r\nexport const INSPECT = -1;\r\nexport const MAKE_SQUARE = 0;\r\nexport const MAKE_CIRCLE = 1;\r\n\r\nconst CUBE = 'CUBE';\r\nconst SPHERE = 'SPHERE';\r\n\r\n// doing this on the cheap\r\nlet shapeId = -1; \r\nconst BoxRecord = (pos) => {\r\n    const {x, y, z} = pos;\r\n    return {\r\n        position:[x, y, z],\r\n        id: ++shapeId,\r\n        active:false,\r\n        type:CUBE\r\n    };\r\n};\r\n\r\nconst ShpereRecord = (pos) => {\r\n  const {x, y, z} = pos;\r\n  return {\r\n      position:[x, y, z],\r\n      id: ++shapeId,\r\n      active:false,\r\n      type:SPHERE\r\n  };\r\n};\r\n\r\nexport const audioDemoSlice = createSlice({\r\n  name: 'audioDemo',\r\n  initialState: {\r\n    perspective: 'X',\r\n    action: INSPECT,\r\n    shapes:[],\r\n    lights:[],\r\n    spotify:{\r\n      //token, type, expire\r\n    }\r\n  },\r\n  reducers: {\r\n    setEditAction:  (state, action) => {\r\n      state.action = action.payload;\r\n    },\r\n\r\n    setShapeIndexActive: (state, action) => {\r\n      const { payload } = action;\r\n      // todo make this more effiecent.\r\n      state.shapes.forEach(shape => shape.active = false);\r\n      const updateShape = state.shapes.filter(shape => shape.id === payload)[0];\r\n      updateShape.active = true;\r\n    },\r\n\r\n    addBoxToScene: (state, action) => {\r\n        const {payload: { pos }} = action;\r\n        // todo set these to keys\r\n        const record = BoxRecord(pos);\r\n        state.shapes.push(record);\r\n    },\r\n\r\n    addSphereToScene: (state, action) => {\r\n      const {payload: { pos }} = action;\r\n      // todo set these to keys\r\n      const record = ShpereRecord(pos);\r\n      state.shapes.push(record);\r\n    },\r\n\r\n    setSpofityTokenInfo: (state, action) => {\r\n      console.log(\r\n        'spotify info', action\r\n      )\r\n      const{payload: {token, type, expire}} = action\r\n\r\n      state.spotify = {\r\n        token, type, expire\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setEditAction, addBoxToScene, addSphereToScene, setShapeIndexActive, setSpofityTokenInfo } = audioDemoSlice.actions;\r\n\r\nexport const selectAudioDemoDomain = state => state.audioDemo;\r\n\r\nexport const selectCurrentPerspective = createSelector(\r\n  selectAudioDemoDomain,\r\n  audioDemo => audioDemo.perspective\r\n);\r\n\r\nexport const selectCurrentAction = createSelector(\r\n  selectAudioDemoDomain,\r\n  audioDemo => audioDemo.action\r\n);\r\n\r\n\r\nexport const selectDemoSpotifyToken = createSelector(\r\n  selectAudioDemoDomain,\r\n  audioDemo => audioDemo.spotify.token\r\n);\r\n\r\n\r\nexport const selectDemoShapes = createSelector(\r\n    selectAudioDemoDomain,\r\n    audioDemo => audioDemo.shapes\r\n);\r\n\r\nexport const selectActiveShapeId = createSelector(\r\n  selectDemoShapes,\r\n  shapes => shapes.filter(shape => shape.active)[0]?.id\r\n);\r\n\r\nexport const selectCubes = createSelector(\r\n  selectDemoShapes,\r\n  shapes => shapes.filter(shape => shape.type == CUBE)\r\n);\r\n\r\nexport const selectSpheres = createSelector(\r\n  selectDemoShapes,\r\n  shapes => shapes.filter(shape => shape.type == SPHERE)\r\n);\r\n\r\nexport const makeSelectShapeByIndexSelector = (index) => createSelector(\r\n  selectDemoShapes,\r\n  (shapes) => shapes[index]\r\n);\r\n\r\n\r\nexport default audioDemoSlice.reducer;\r\n","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\controls\\infoControls.js",["99","100"],"\r\nimport { Button, rgbToHex } from '@material-ui/core';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport {\r\n    selectActiveShapeId,\r\n    makeSelectShapeByIndexSelector\r\n} from '../audioDemoSlice';\r\n\r\nexport default function InfoControls () {\r\n\r\n    const Id = useSelector(selectActiveShapeId);\r\n    const shape = useSelector(makeSelectShapeByIndexSelector(Id))\r\n\r\n    const { type, id, position} = shape || {position:[]};\r\n    console.log('infor controls shape', shape)\r\n\r\n    return (\r\n        <span style={{color:'rgb(180,180,180'}}>\r\n           <p>Inspceting:{type} {id}</p>\r\n           <p>X POS:{position[0]}</p>\r\n           <p>Y POS:{position[1]}</p>\r\n           <p>Z POS:{position[2]}</p>\r\n        </span>\r\n    );\r\n}","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\features\\audioDemo\\CustomCamera.js",["101","102"],"\r\nimport React, { useEffect } from 'react';\r\nimport { useFrame, useThree } from 'react-three-fiber'\r\n\r\n// export default function CustomCamera(props) {\r\n//     const ref = useRef();\r\n//     console.log(\r\n//         'camera REF', ref\r\n//     )\r\n//     const { setDefaultCamera } = useThree();\r\n//     useEffect(() => void setDefaultCamera(ref.current), [])\r\n//     useFrame(() => ref.current.updateMatrixWorld())\r\n//     return <perspectiveCamera ref={ref} {...props} />\r\n// };\r\n\r\nconst CustomCamera = React.forwardRef((props, ref) => {\r\n    const { setDefaultCamera, size} = useThree();\r\n    \r\n    useEffect(() => void setDefaultCamera(ref.current), [])\r\n    useFrame(() => ref.current.updateMatrixWorld())\r\n\r\n   return <perspectiveCamera ref={ref} {...props} />\r\n});\r\n\r\nexport default CustomCamera;","C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\primatives\\Sphere.js",[],"C:\\Users\\KC\\Desktop\\webdev\\my-app\\src\\routes\\auth\\CallbackPage.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":17,"column":3,"nodeType":"109","messageId":"110","endLine":17,"endColumn":11},{"ruleId":"107","severity":1,"message":"111","line":22,"column":9,"nodeType":"109","messageId":"110","endLine":22,"endColumn":17},{"ruleId":"103","replacedBy":"112"},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","severity":1,"message":"114","line":6,"column":18,"nodeType":"109","messageId":"110","endLine":6,"endColumn":26},{"ruleId":"107","severity":1,"message":"115","line":9,"column":29,"nodeType":"109","messageId":"110","endLine":9,"endColumn":36},{"ruleId":"107","severity":1,"message":"116","line":11,"column":15,"nodeType":"109","messageId":"110","endLine":11,"endColumn":22},{"ruleId":"107","severity":1,"message":"117","line":85,"column":17,"nodeType":"109","messageId":"110","endLine":85,"endColumn":23},{"ruleId":"107","severity":1,"message":"118","line":86,"column":17,"nodeType":"109","messageId":"110","endLine":86,"endColumn":23},{"ruleId":"107","severity":1,"message":"119","line":113,"column":28,"nodeType":"109","messageId":"110","endLine":113,"endColumn":37},{"ruleId":"107","severity":1,"message":"120","line":113,"column":55,"nodeType":"109","messageId":"110","endLine":113,"endColumn":56},{"ruleId":"107","severity":1,"message":"119","line":130,"column":28,"nodeType":"109","messageId":"110","endLine":130,"endColumn":37},{"ruleId":"107","severity":1,"message":"120","line":130,"column":55,"nodeType":"109","messageId":"110","endLine":130,"endColumn":56},{"ruleId":"121","severity":1,"message":"122","line":138,"column":23,"nodeType":"123","messageId":"124","endLine":138,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":141,"column":28,"nodeType":"123","messageId":"124","endLine":141,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":144,"column":28,"nodeType":"123","messageId":"124","endLine":144,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":149,"column":9,"nodeType":"127","endLine":149,"endColumn":27,"suggestions":"128"},{"ruleId":"107","severity":1,"message":"129","line":2,"column":20,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"107","severity":1,"message":"130","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":16},{"ruleId":"107","severity":1,"message":"131","line":17,"column":11,"nodeType":"109","messageId":"110","endLine":17,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":118,"column":47,"nodeType":"123","messageId":"124","endLine":118,"endColumn":49},{"ruleId":"121","severity":1,"message":"122","line":123,"column":47,"nodeType":"123","messageId":"124","endLine":123,"endColumn":49},{"ruleId":"107","severity":1,"message":"130","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"132","line":2,"column":18,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"107","severity":1,"message":"133","line":17,"column":31,"nodeType":"109","messageId":"110","endLine":17,"endColumn":35},{"ruleId":"125","severity":1,"message":"134","line":19,"column":57,"nodeType":"127","endLine":19,"endColumn":59,"suggestions":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.",["136"],["137"],"'useThree' is defined but never used.","'Vector2' is defined but never used.","'dreiBox' is defined but never used.","'layerX' is assigned a value but never used.","'layerY' is assigned a value but never used.","'direction' is assigned a value but never used.","'z' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'raycaster'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'extend' is defined but never used.","'Button' is defined but never used.","'idValu' is assigned a value but never used.","'rgbToHex' is defined but never used.","'size' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ref' and 'setDefaultCamera'. Either include them or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [action, raycaster, dispatch]",{"range":"144","text":"145"},"Update the dependencies array to be: [ref, setDefaultCamera]",{"range":"146","text":"147"},[4838,4856],"[action, raycaster, dispatch]",[650,652],"[ref, setDefaultCamera]"]